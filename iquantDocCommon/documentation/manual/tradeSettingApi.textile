h1. 交易设置对外接口(iquant) (1.1版本)

h2(#tongyi). 统一说明

p(note). **特别注意**
以下api都要求带ntToken参数, 也就是都需要token做为参数

h4. 返回值统一说明

**操作错误** 返回, 如下格式的json对象

bc. {
  "status" : -1,
  "errors" : [
    {"key":"name", "msg":"名称重复"}
  ]
}


**操作成功** 返回, 如下格式的json对象

bc. {
  "status" : 0,
  "data" : object //object具体的数据用每个协议对应的响应体进行替换后即为每个协议的完整响应协议
}

消息格式:
注意这里列出的是 @名称重复@ 这个消息. 用 @key@ 指明字段, @msg@ 指明内容

**其它错误** 返回, 如下格式的json对象


也就是返回的json对象的key为 **@error@** , 其值为一个字符串, 描述错误信息.

**增加成功**, 返回如下格式的json对象

bc. {"id":5}

**@id@** 增加成功的记录id.

**修改成功**, 返回如下格式的json对象

bc. {"id":5}

**@id@** 修改的记录id.

**删除成功**, 返回如下格式的json对象

bc. {"id":5,"effect":1}

**@id@** 删除的记录id.
**@effect@** 删除记录的条数

h2. 策略类

h3. 查询用户的已上架策略

||项||说明||
| url | /productCt/fetchStrategyByUserId |
| http Method | get |
| 返回结果 | 见下面的json返回格式说明 |


*json返回格式举例说明*

bc. [
    {
        "id" : 1,
        "name" : "策略1",
        "tradeVariety" : 1, //交易品种
        "accountTemplate" : [ //帐号模板
            {
                "accountOrder" : 1, //交易帐号序号.
                "accountType" : 2 //帐号类型, 0:期货, 1:股票
            }
        ]
    }
]

交易品种: 1. 股票 2. 期货 3. 混合

h3. 查询策略原始配制的标的信息

这个是策略的原始标的信息, 从策略的配制文件里提取出来的

||项||说明||
| url | /productCt/fetchStrategySecurityOriginal|
| http Method | get |
| 返回结果 | 见下面的json返回格式说明. |

*参数说明*
# **id** long 策略id

bc. {
    "strategyId" : 1, //策略id
    "plates" : [//板块
        {
            "name" : "板块名称",
            "maxPosition" : 0.23, //最大持仓量
            "systemPlateId" :  13 //系统的板块id
        }
    ]
    securities : [ //单个证券集合
        {
            "symbol" : "股票代码",
            "market" : "市场类型",
            "maxPosition" : 1000 //最大持仓量
        }
    ]
}


h2. 交易资金帐号

h3. 查询用户交易账号列表

||项||说明||
| url | /productCt/fetchTradeAccountList |
| http Method | get |
| 返回结果 | 见下面的json返回格式说明. 返回的结果会按 *是否使用(used字段)排序* |

*json返回格式举例说明*

bc. [
    {
        "id" : 1,
        "name" : "名称",
        "type" : 1, //帐户类型. 0:期货, 1:股票
        "account" : "002002", //帐号
        "used" : 0 //是否使用. 0: 没有使用, 1: 使用
    }
]

h3. 查询单个交易账号信息

||项||说明||
| url | /productCt/fetchTradeAccount |
| http Method | get |
| 参数 | 见参数说明 |
| 返回结果 | 见下面的json返回格式说明. |

*参数说明*
# id 账户ID

*json返回格式举例说明*

bc. [
    {
       "id" : 1,
       "name" : "test",
       "account" : "1232",
       "password" : "1332",
       "type" : 1, //type 取值为: 0:期货, 1:股票
       "clientId " : "VE", //交易柜台
       "targetCompId" : "期货公司客户号", //期货公司客户号
       "hedgeType" : 0 //0. 投机(Speculation), 1. 套保(Hedge)
    }
]

h3. 增加一个交易帐号

||项||说明||
| url | /productCt/addTradeAccount |
| http Method | post |
| url上的参数说明 | 无 |
| body json格式 | 参数格式见下面描述 |
| 返回结果 | 见上统一说明 |

*body json 参数格式说明*

bc. {
       "name" : "test",
       "account" : "1232",
       "password" : "1332",
       "type" : 1, //type 取值为: 0:期货, 1:股票
       "clientId" : "VE", //交易柜台
       "targetCompId" : "期货公司客户号", //期货公司客户号
       "hedgeType" : 0 //0. 投机(Speculation), 1. 套保(Hedge)
}


h3. 删除一个交易帐号

||项||说明||
| url | /productCt/delTradeAccount |
| http Method | post |
| 返回结果 | 见上统一说明 |

*参数说明*
# **id** long 交易帐号的id


h3. 修改一个交易帐号信息

||项||说明||
| url | /productCt/editTradeAccount |
| http Method | post |
| url上的参数说明 | 无 |
| 返回结果 |  参数格式见下面描述|

*body json 参数格式说明*

bc. {
  "id" : 1,
  "name" : "test",
  "account" : "1232",
  "password" : "1332",
  "type" : 1, //type 取值为: 0:期货, 1:股票
  "clientId " : "VE", //交易柜台
  "targetCompId" : "期货公司客户号", //期货公司客户号
  "hedgeType" : 0 //0. 投机(Speculation), 1. 套保(Hedge)
}

h2. 产品类

h3. 返回用户的产品信息简要列表

||项||说明||
| url | /productCt/fetchShortProductInfo |
| http Method | get |
|  参数 | 见参数说明 |
| 返回结果 | 见返回json格式说明 |

*返回json格式说明*

bc. [
    {
        "id" : 232, //产品id
        "name" : "产品名称",
        "strategys" : [ //关联策略信息
            {
                "strategyId" : 123, //策略id
                "name" : "策略1", //策略名称
                "id":10184,//策略运行id，同时也为产品策略关联id
                "accounts" : [
                    {
                        "accountId" : 2332, //交易帐号id
                        "name" : "交易帐号名", //交易帐户名
                        "type" : 1, //类型, 0:期货, 1:股票
                        "account" : "0002020" //帐号
                        "accountOrder":0 //交易账号序号
                    }
                ]
            }
        ]
    }
]


h3. 根据产品id查看产品信息

||项||说明||
| url | /productCt/fetchProductById |
| http Method | get |
|  参数 | 见参数说明 |
| 返回结果 | 见返回json格式说明 |

*参数说明*
# id 产品ID

*返回json格式说明*

bc. {
     "name" : "产品1",
     "strategys" : [ //策略数组
        {
            "id" : 23, //关联id
            "strategyId" : 23, //策略id
            "name" : "策略1",
            "tradeVariety" : 1 //交易品种. 1. 股票 2. 期货 3. 混合
            "fundsProportion" : 0.3, //资金使用比例
            "accounts":[
                {
                    "accountId" : 2332, //交易帐号id
                    "name" : "交易帐号名", //交易帐户名
                    "type" : 1, //类型, 0:期货, 1:股票
                    "account" : "0002020" //帐号
                    "accountOrder":0 //交易账号序号
                }
            ]
        }
     ],
     "riskStocks" : [ //风控股票数组
         {
            "symbol" : "000001", //代码
            "market" : "SSE" //市场
         }
     ]
}

h3. 查询产品策略的标的信息

||项||说明||
| url | /productCt/fetchStrategyStockInfo |
| http Method | get |
| 参数 | 见参数描述 |
| 返回结果 | 见返回结果描述 |

*参数说明*
# productId       产品id
# strategyId      策略id


*返回结果说明*
返回json格式

bc. {
    "strategyId" : 1, //策略id
    "plates" : [//板块
        {
            "name" : "板块名称",
            "maxPosition" : 0.23, //最大持仓量
            "systemPlateId" :  13,     //系统板块id, -1表示是自定义板块
            "traceSystemPlate" : "0|1", //是否跟踪系统板块.0不跟踪, 1跟踪 (只有在 systemPlateId 不为-1时有意义)
            "plateStocks" : [ //板块包含的成分股. (这个一定会有)
                {
                    "symbol" : "股票代码",
                    "market" : "市场类型",
                    "status" : "0|1"  //0正常，1屏蔽
                }
            ]
        }
    ]
    "securities" : [ //单个证券集合
        {
            "symbol" : "股票代码",
            "market" : "市场类型",
            "maxPosition" : 1000 //最大持仓量
        }
    ]
}

h3. 保存一个产品（全部信息）

||项||说明||
| url | /productCt/addProduct |
| http Method | post |
| body json格式 | 参数格式见下面描述 |
| 返回结果 | 见统一说明 |

*body参数json格式说明*

bc. {
    "name" : "产品名称",
    "riskStocks" : [//产品的风控证券，也就是c。
        {
            "symbol" : "股票代码",
            "market" : "市场类型"
        }
    ],
    "strategys" : [//策略集合
        {
            "strategyId" : "策略id",
            "fundsProportion" : 0.222, //资金使用比例
            "accounts" : [
                {
                    "accountId" : 232, //交易帐号id
                    "accountOrder": 1 //交易帐号序号
                }
            ],
            "plates" : [//板块
                {
                    "name" : "板块名称",
                    "maxPosition" : "最大持仓量",
                    "systemPlateId" :  13,     //系统板块id, -1表示是自定义板块
                    "traceSystemPlate" : "0|1", //是否跟踪系统板块.0不跟踪, 1跟踪 (只有在 systemPlateId 不为-1时有意义)
                    "plateStocks" : [
                        {
                            "symbol" : "股票代码",
                            "market" : "市场类型",
                            "status" : 0  //0正常，1屏蔽
                        }
                    ]
                }
            ],
            "securities" : [ //单个证券集合
                {
                    "symbol" : "股票代码",
                    "market" : "市场类型",
                    "maxPosition" : 1000 //最大持仓量
                }
            ]
        }
    ]
}

h3. 修改一个产品

||项||说明||
| url | /productCt/editProduct |
| http Method | post |
| body json格式 | 参数格式见下面描述 |
| 返回结果 | 见统一说明 |

*body参数json格式说明*

bc. {
    "id" :   133, //产品id
    "name" : "产品名称",
    "riskStocks" : [//产品的风控证券，也就是c。
        {
            "symbol" : "股票代码",
            "market" : "市场类型"
        }
    ],
    "strategys" : [//策略集合
        {
            "id":123 //关联id 当此值为-1时说明是新增的策略，非新增策略时查询产品时服务器返回的关联id
            "strategyId" : "策略id",
            "fundsProportion" : 0.222, //资金使用比例
            "accounts" : [
                {
                    "accountId" : 232, //交易帐号id
                    "accountOrder": 1 //交易帐号序号
                }
            ]
            "plates" : [//板块
                {
                    "name" : "板块名称",
                    "maxPosition" : "最大持仓量",
                    "systemPlateId" :  13,     //系统板块id, -1表示是自定义板块
                    "traceSystemPlate" : "0|1", //是否跟踪系统板块.0不跟踪, 1跟踪 (只有在 systemPlateId 不为-1时有意义)
                    "plateStocks" : [     //此字段当板块为自定义板块的时候才需设值. (也就是systemPlateId为-1时)
                        {
                            "symbol" : "股票代码",
                            "market" : "市场类型",
                            "status" : "0|1"  //0正常，1屏蔽
                        }
                    ]
                }
            ]
            "securities" : [ //单个证券集合
                {
                    "symbol" : "股票代码",
                    "market" : "市场类型",
                    "maxPosition" : 1000//最大持仓量
                }
            ]
        }
    ]
}

h3. 删除一个产品. 会删除产品记录及关联的帐号,策略关联关系

||项||说明||
| url | /productCt/delProduct |
| http Method | post |
| 返回结果 | 见统一说明 |

*参数说明*
# **id** long 产品的id

h2. 其它类

h3. 根据系统板块id查成分股

||项||说明||
| url | /productCt/fetchPlateSecurityInfo |
| http Method | get |
| 返回结果 | 返回json对象, json对象格式见下面描述 |

*参数说明*
# **id** long 板块id

*返回结果说明*
返回json格式

bc. [
    {
        "symbol" : "000001", //股票代码
        "market" : "SSE" //市场
    }
]

h3. 返回当日主力连续合约全部选项

||项||说明||
| url | /productCt/fetchAllMainContractAndContinuingContract|
| http Method | get |
| 返回结果 | 返回json对象, json对象格式见下面描述 |

*返回结果说明*
返回json格式

bc. [
    {
        "exchangeCode" : "CZCE"//市场
        "underlyingAssetsCode" : "RI"//标的资产
        "code" : "CC03"//代码2 (CONTINUESIGN、MODEID)
    }
]

h3. 策略上传接口

||项||说明||
| url | /UploadFilesCt/uploadStrage|
| http Method | post |
| 返回结果 | 返回json对象, 见 "统一描述":#tongyi 只考虑成功及失败提示信息两种情况即可|

p(note). **特别注意**
这个接口使用http的文件上传的方式, 具体的c#代码调用可参考之前的, 这种文件上传已经是调试过的了.

*上传参数说明*

# **file** File类型, 策略的zip文件
# **otherParam** json格式的字符串 策略的其它描述信息参数. 格式说明如下

bc. {
	"sname" : "策略名称",
	"tradeType: 1, // 策略类型. 1. 选股型 2. 择时型 3. 交易型 4. 其他
	"tradeVariety" : 1, //交易品种. 1. 股票 2. 期货 3. 混合
	"provider" : "策略师姓名",
	"providerDesp" : "策略师简介",
	"desp" : "策略简介",
	"lookBackStime" : '2012-03-12', //回测开始时间
	"lookBackEtime" : '2013-03-13' //回测结束时间
}


h2. 给QSE提供的接口

p(note). **特别注意**
给QSE提供的是使用zmp(3.2.2)通讯的, 通讯的内容格式使用json

请求跟返回使用json格式, 以下是对请求与返回格式的共同字段的说明

**请求的格式**

bc. {
    "cmd" : 1, //命令号, int类型. 每个命令号对应不同的处理
    "data" : //命令数据, 命令数据为一个json格式的对象
}

**返回的格式**

p(note). **提醒**
当 @sucess@ 为0时, @data@ 一般是个字符串, 记录相应的错误信息, 把这个信息记录到日志里去, 方便排查问题

bc. {
    "sucess" : 1, //成功标志. 1成功, 0失败
    "data" : //为一个json格式的对象或者数组.
}

h3. 查询当前已使用的交易帐号

返回系统当前已使用的全部交易帐号的信息

||主机||端口||模式||
|192.168.103.104|55555|Request-Reply|

*请求参数格式*

bc. {
    "cmd" : 1,
    "data" : {} //对, 这里就是什么都不填, 就一对大括号
}

*响应json格式说明*

bc. {
    "sucess" : 1, //成功标志. 1成功, 0失败
    "data" : [
        {
          "id" : 112333, //帐号id
          "name" : "test",
          "account" : "1232",
          "password" : "1332",
          "type" : 1,  //类型 取值为: 0:期货, 1:股票
          "clientId" : "VE", //交易柜台
          "targetCompId" : "期货公司客户号", //期货公司客户号
          "hedgeType" : 0 //0. 投机(Speculation), 1. 套保(Hedge)
          "initCapital" : 123.33 //初始资金
        }
    ]
}


h3. 根据策略实例id返回策略信息

根据策略实现id(也就是产品策略绑定id)返回这个策略的详细信息(包含资金使用比例,帐号列表,交易标的(已经做了 A + B - C))

||主机||端口||模式||
||55555|Request-Reply|

*请求参数格式*

bc. {
    "cmd" : 2,
    "data" : {
        "strategyInstanceId" : 1 //策略实例id. 这个要填入具体的值
    }
}

*响应json格式说明*

bc. {
    "fundsProportion" : 0.3, //资金使用比例
    "accounts" : [
        {
            "name" : "test",
            "account" : "1232",
            "password" : "1332",
            "type" : 1,  //类型 取值为: 0:期货, 1:股票
            "clientId" : "VE", //交易柜台
            "targetCompId" : "期货公司客户号", //期货公司客户号
            "hedgeType" : 0, //0. 投机(Speculation), 1. 套保(Hedge)
            "initCapital" : 3.33, //初始资金
            "accountOrder" : 1 //交易帐号序号
        }
    ]
    "securities" : [ //交易标的
        {
            "symbol" : "股票代码",
            "market" : "市场类型",
            "maxPosition" : 1000,//最大持仓量
            "srcSymbol" : "如果是主力或连续合约,则这个值对应的是当天具体的证券代码;其它情况为空字符串"
        }
    ]
}

h3. 修改交易帐号的初始资金

根据帐号id修改初始资金

||主机||端口||模式||
||55555|Request-Reply|

*请求参数格式*

bc. {
    "cmd" : 3,
    "data" : {
        "accountId" : 1111, //帐号id
        "initCapital" : 123.33 //初始资金
    }
}

*响应json格式说明*

bc. {
    "sucess" : 1, //成功标志. 1成功, 0失败
    "data" :{
        "effect" : 1 //影响数据条数,如果缺少参数的话,返回-1,
                       //一般情况下应该返回1.影响一条数据库记录
    }

}


h3. 查询所有运行实例和其所对应的账号(不需token验证)


||项||说明||
| url | /productCt/fetchAllRuntimeStrategyAcconts|
| http Method | post/get |

*请求参数格式*

无需请求参数

*响应json格式说明*

bc. [
    {
        "id": 10480, //运行id
        "accounts": {
            "account": "010000004006", //帐号
            "initCapital": 0.0000  //初始资金
        }
    }
]